---
- name: kibana-setup | Configuring kibana group
  group:
    name={{ kibana_group }}

- name: kibana-setup | Configuring kibana user
  user:
    name={{ kibana_user }}
    group={{ kibana_group }}
    createhome=no
    
- name: kibana-setup | Create service account for Kibana
  user: name=kibana
        system=yes
        home=/var/lib/kibana
        shell=/bin/false
        state=present

- name: kibana-setup | Try to stop elasticsearch if running
  service:
    name=kibana
    state=stopped
  ignore_errors: yes

- name: kibana-setup | Remove kibana directory
  file:
    path="{{ kibana_dir }}/kibana"
    state=absent
  sudo: yes

- name: elasticsearch-setup | Download kibana
  get_url:
    url: "{{ kibana_download_url }}/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
    dest: "/tmp/kibana-{{ kibana_version }}.tar.gz"
    mode: 0644
    owner: "{{ kibana_user }}"
    group: "{{ kibana_group }}"
    validate_certs: no
  
- name: kibana-setup | Extract kibana
  unarchive:
    src: "/tmp/kibana-{{ kibana_version }}.tar.gz"
    dest: "{{ kibana_dir }}"
    copy: no
    owner: "{{ kibana_user }}"
    group: "{{ kibana_group }}"

- name: kibana-setup | Rename kibana dir
  command: mv "{{kibana_dir}}/kibana-{{kibana_version}}-linux-x86_64" "{{kibana_dir}}/kibana"
  sudo: yes
        
- name: kibana-setup | Configure Kibana
  template: src=kibana.yml.j2
            dest={{ kibana_dir }}/kibana/config/kibana.yml
            owner={{ kibana_user }}
            group={{ kibana_group }}
  notify:
    - Restart kibana

- name: Configure Kibana service definition
  template: src=kibana.conf.j2 dest=/etc/init/kibana.conf
  notify:
    - Restart kibana

- name: kibana-setup | Touch log file if it does not exist
  command: touch {{ kibana_log }}
           creates={{ kibana_log }}

- name: kibana-setup | Set log file permissions
  file: path={{ kibana_log }} owner={{ kibana_user }} group={{ kibana_group }} mode=0644

- name: Configure Kibana log rotation
  template: src=logrotate_kibana.j2 dest=/etc/logrotate.d/kibana

- name: Install python-passlib for htpassword
  pip: name=passlib
  sudo: yes
 
- name: kibana-setup | Generate kibana htpassword
  htpasswd: path=/etc/nginx/htpasswd.users name=admin password=admin
  sudo: yes

#- name: Change /etc/nginx/sites-available/default file
#  template:
#    src=nginx_sa_default.yml.j2
#    dest=/etc/nginx/sites-available/default
#    owner={{kibana_user}} group={{kibana_group}} mode=644
#  sudo: yes
#  notify: Restart kibana
